/*
Copyright (C) 2017-2024 Topological Manifold

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

/*
Brian Smits.
An RGB-to-Spectrum Conversion for Reflectances.
Journal of Graphics Tools, 1999.
*/

/*
Matt Pharr, Wenzel Jakob, Greg Humphreys.
Physically Based Rendering. From theory to implementation. Third edition.
Elsevier, 2017.

5.2.2 RGB color
*/

#include "rgb_samples.h"

#include "average.h"

#include <algorithm>
#include <array>
#include <cstddef>
#include <type_traits>
#include <vector>

namespace ns::color::samples
{
namespace
{
// clang-format off
constexpr std::array WAVES =
{
         3.80000000000000000e+02,  3.90967741935483871e+02,
         4.01935483870967742e+02,  4.12903225806451613e+02,
         4.23870967741935484e+02,  4.34838709677419355e+02,
         4.45806451612903226e+02,  4.56774193548387097e+02,
         4.67741935483870968e+02,  4.78709677419354839e+02,
         4.89677419354838710e+02,  5.00645161290322581e+02,
         5.11612903225806452e+02,  5.22580645161290323e+02,
         5.33548387096774194e+02,  5.44516129032258065e+02,
         5.55483870967741935e+02,  5.66451612903225806e+02,
         5.77419354838709677e+02,  5.88387096774193548e+02,
         5.99354838709677419e+02,  6.10322580645161290e+02,
         6.21290322580645161e+02,  6.32258064516129032e+02,
         6.43225806451612903e+02,  6.54193548387096774e+02,
         6.65161290322580645e+02,  6.76129032258064516e+02,
         6.87096774193548387e+02,  6.98064516129032258e+02,
         7.09032258064516129e+02,  7.20000000000000000e+02
};
constexpr std::array REFLECTANCE_WHITE =
{
         9.99380736354927972e-01,  9.99010064233787924e-01,
         9.98945634518869320e-01,  9.99733949831214631e-01,
         9.99670382580426097e-01,  9.99954956086727489e-01,
         9.99849410547303913e-01,  9.99921685571425934e-01,
         9.99953843638710636e-01,  9.99889657384648687e-01,
         9.99544085027233760e-01,  9.98835730160979349e-01,
         9.98569055908795636e-01,  9.98901701207143573e-01,
         9.98934339673956753e-01,  9.99510384373775959e-01,
         9.99996129493104010e-01,  9.99885079422185966e-01,
         9.99972759924712069e-01,  9.99881331517562816e-01,
         9.99925770639425147e-01,  1.00000000000000000e+00,
         9.99980079040801191e-01,  9.99847888294061268e-01,
         9.99822352471182597e-01,  9.99973450351907580e-01,
         9.98751972769085961e-01,  9.97056528279591672e-01,
         9.97578680597021807e-01,  9.97836225768635368e-01,
         9.97715359593619267e-01,  9.98214412939439213e-01
};
constexpr std::array REFLECTANCE_CYAN =
{
         9.80150600556353356e-01,  9.72060047122282998e-01,
         9.53000749255865528e-01,  9.74111612875754388e-01,
         9.48531819845497220e-01,  9.80870786511745223e-01,
         9.82782816971530647e-01,  9.91501579892406804e-01,
         9.58142135507227970e-01,  9.82795350004738497e-01,
         9.90948596311494410e-01,  9.91670604817791988e-01,
         9.91375805460527561e-01,  9.91741041700931922e-01,
         9.90735075703917875e-01,  9.91050849813070919e-01,
         9.92943045638354987e-01,  9.93236580926926893e-01,
         9.83884868984692792e-01,  5.86783909011169481e-01,
         1.69761480565329042e-01, -7.18116626466768290e-03,
        -1.43219535835639410e-04, -7.06808946902441879e-03,
        -2.04306249165174188e-03,  6.20387061791724951e-04,
         1.15559462938346704e-02, -4.20400107689385844e-03,
         1.61119353643276927e-02,  4.63139721196238476e-03,
         5.53034791556553309e-03,  2.37723473713202189e-02
};
constexpr std::array REFLECTANCE_MAGENTA =
{
         9.35690340711578882e-01,  9.31594538649946643e-01,
         9.25069892096060430e-01,  9.37626527259240979e-01,
         9.59852993919099572e-01,  9.56788724043131359e-01,
         9.61919539496043480e-01,  9.37850493702369121e-01,
         9.50329821111374818e-01,  9.61402793178808572e-01,
         6.02623131990092990e-01,  2.35398698017474051e-03,
         6.14932966056431256e-03,  2.66660181473281014e-03,
        -4.81948985442699221e-11, -8.52590115369981586e-03,
         3.19388217966982207e-03, -2.88350005867388779e-03,
         2.08967630195584248e-01,  5.94239431190495252e-01,
         9.17421595462257453e-01,  9.14867153248899159e-01,
         9.57482787840608960e-01,  9.39954182662200811e-01,
         8.91265181688919018e-01,  8.02393426970428788e-01,
         8.93110479605475842e-01,  8.91737161123531493e-01,
         9.37354313210240484e-01,  8.12206843405773881e-01,
         8.39025590784874438e-01,  7.98702974025201506e-01
};
constexpr std::array REFLECTANCE_YELLOW =
{
         5.24591036020140306e-03, -4.51580230644800631e-03,
        -4.94436718647195698e-03, -6.07700772550094427e-03,
        -5.61792837161261120e-03, -2.05511615916408449e-03,
         1.57931953030807116e-02,  9.04390442858746853e-02,
         1.99682650627003754e-01,  3.40398117374250017e-01,
         5.07842601405575996e-01,  7.00282719080681108e-01,
         8.67810797967998185e-01,  9.84449326370218536e-01,
         9.89486312518672559e-01,  9.89313787905952950e-01,
         9.89176297450020477e-01,  9.89822506422591519e-01,
         9.89695064076050798e-01,  9.89309290244656944e-01,
         9.89276001937368325e-01,  9.89748649942612154e-01,
         9.89506409172741111e-01,  9.89685459145323563e-01,
         9.89263777718686403e-01,  9.89608543477306639e-01,
         9.89020113133555467e-01,  9.89025038868969187e-01,
         9.86066987171692915e-01,  9.87552025151528858e-01,
         9.82158528138873779e-01,  9.78047436636249400e-01
};
constexpr std::array REFLECTANCE_RED =
{
         1.55997785342252038e-01,  1.11490280821177666e-01,
         1.16778017744866190e-01,  1.07018312263777558e-01,
         7.43420523266088241e-02,  3.03096199289303172e-02,
        -1.01626522980784227e-02,  1.69892334200986100e-02,
         5.02630489659156116e-03,  1.28510367972176599e-02,
        -5.60575947199607112e-03, -1.73585225131932141e-03,
        -9.94950447067999828e-03, -2.76461478672313746e-03,
        -1.01552276052200045e-02, -7.55014026684393284e-03,
        -2.13346057986909924e-03,  6.60674656248173555e-03,
        -7.67287873255564632e-03,  5.71950932235832088e-01,
         9.30132247996550998e-01,  9.35403794228067937e-01,
         9.44831070745062001e-01,  9.33924422789970647e-01,
         9.40437325570486589e-01,  9.49092742990545771e-01,
         9.25678224001604365e-01,  9.49130586011745282e-01,
         9.17140694407645900e-01,  9.27419055689412109e-01,
         8.79915528685976221e-01,  9.29024981082823921e-01
};
constexpr std::array REFLECTANCE_GREEN =
{
         2.49344100400842698e-03, -4.72211484124978588e-03,
        -1.18085649746694816e-02, -8.89883967644149113e-03,
        -1.17886600157558445e-02, -7.45098209909257262e-03,
        -7.52486423106655156e-03, -8.80514740321428986e-03,
         6.16143939281441578e-02,  3.72431714551406904e-01,
         7.08143137650019659e-01,  9.07026763446355929e-01,
         9.39758799930177476e-01,  9.41062669555882826e-01,
         9.40555492684456214e-01,  9.41075800577645493e-01,
         9.40555822665642183e-01,  9.40293393587044832e-01,
         9.03667933122363661e-01,  5.94664250255206718e-01,
         2.42786761650193282e-01,  8.84801159116989137e-03,
        -2.89852089602761555e-03, -4.25675994574574718e-03,
        -6.48752153715503425e-03, -8.50330501837922748e-03,
        -8.08558234579853511e-03, -7.87638842794667372e-03,
        -7.40535001955268902e-03, -7.87325537177729380e-06,
         5.11044452276384432e-03, -2.61121726185305951e-03
};
constexpr std::array REFLECTANCE_BLUE =
{
         9.33691696784997987e-01,  9.30554487242068825e-01,
         9.36790544643618105e-01,  9.36699035009322656e-01,
         9.33425130926987684e-01,  9.41371956197645032e-01,
         9.40832106297760946e-01,  9.41016965909016212e-01,
         9.27049592782754244e-01,  7.43772642209018407e-01,
         5.27805703116197646e-01,  3.11828508845327927e-01,
         1.28863217016504486e-01,  1.78013626466347035e-02,
        -4.81196981618005517e-06, -3.98996181178051475e-04,
        -3.94658518076619098e-04,  1.64443693872507741e-03,
         3.57621026810711206e-03, -5.18575830170023760e-04,
        -4.11430089544337747e-05,  7.14076761099206699e-03,
         2.42770289560838889e-02,  3.59213570601116426e-02,
         4.65760733262096092e-02,  4.66762149625705997e-02,
         4.68821595497937976e-02,  3.74954274187325321e-02,
         2.87053919240396861e-02,  1.99924498915998002e-02,
         6.54992982931130510e-03,  3.92767378450882065e-03
};
constexpr std::array ILLUMINATION_D65_WHITE =
{
         1.08843725540862795e+00,  1.08862481764221883e+00,
         1.08852864841112306e+00,  1.08754789227492602e+00,
         1.08814959552854108e+00,  1.08866707546141254e+00,
         1.08869993804043715e+00,  1.08866739857709861e+00,
         1.08828019349555688e+00,  1.08860879044438301e+00,
         1.08842804072306102e+00,  1.08835294214171617e+00,
         1.08869993679075029e+00,  1.07977093123569862e+00,
         1.06717575340701276e+00,  1.06289920313681981e+00,
         1.06258287450969594e+00,  9.88643045590308900e-01,
         9.84392081631450442e-01,  9.35168475563583650e-01,
         8.99734809077019418e-01,  8.70238071495368523e-01,
         8.61132299358906395e-01,  8.46446201033641977e-01,
         8.42710419509765130e-01,  8.36386466588298063e-01,
         8.30290560252375425e-01,  8.28177420869470197e-01,
         8.24760495140825759e-01,  8.28196779491781428e-01,
         8.28811309251699794e-01,  8.31060993161959679e-01
};
constexpr std::array ILLUMINATION_D65_CYAN =
{
         1.06672048454303555e+00,  1.06034741150098323e+00,
         1.06788257538049003e+00,  1.06887718859035618e+00,
         1.06878081930165146e+00,  1.06923078794654389e+00,
         1.06932735419142218e+00,  1.06957586817121849e+00,
         1.06866179291765520e+00,  1.06950446366012669e+00,
         1.06915649828887537e+00,  1.06913381891321527e+00,
         1.06858271662040335e+00,  1.06941397092763240e+00,
         1.06869410204867610e+00,  1.06853240810318553e+00,
         1.06813375474382167e+00,  1.04569889445512645e+00,
         8.52650806722533615e-01,  5.75601700761629510e-01,
         2.78007104729263923e-01,  9.03052583541512834e-02,
        -1.09648955128088427e-02, -1.14296635232046980e-02,
        -1.04918611746007897e-02, -1.12912927443347905e-02,
        -4.75334545070380433e-03, -7.52740627777416014e-03,
        -8.91463684272795990e-03, -5.20722225840521284e-03,
        -4.27544577452284177e-03, -1.18027102958491916e-02
};
constexpr std::array ILLUMINATION_D65_MAGENTA =
{
         9.76128678728814308e-01,  9.96424116321229218e-01,
         1.01333886575091827e+00,  1.01290929980056113e+00,
         1.01597571011938565e+00,  1.01111531062863769e+00,
         1.00955152620218016e+00,  1.01006150137386909e+00,
         1.01865526471947394e+00,  1.02023493668055840e+00,
         8.99790319307091432e-01,  5.19483284862703614e-01,
         7.92346611376407386e-02,  8.27629299789851001e-05,
        -2.17272829598472278e-03, -1.05859449315233745e-03,
        -7.27470068133996579e-11, -2.56653051502440719e-04,
         1.36148139538725635e-02,  2.43593450155932385e-01,
         4.97932405252825520e-01,  8.56113065737196376e-01,
         1.00612041881798692e+00,  1.02463757312390339e+00,
         1.00113723256419477e+00,  9.60121959023534831e-01,
         9.65804849394241909e-01,  1.01482719942960146e+00,
         9.25448144330480673e-01,  1.00768975249152347e+00,
         1.00081964686608154e+00,  9.55328089802104936e-01
};
constexpr std::array ILLUMINATION_D65_YELLOW =
{
         2.61228725058502654e-03,  3.73381741434681680e-03,
        -1.37470083772423036e-04,  3.40673503575522205e-04,
        -2.42992470475017397e-04, -4.71817887119696886e-05,
        -2.29985921935251545e-04, -7.34658477335327147e-05,
         4.67649717975478198e-02,  4.56597782830517024e-01,
         9.68960375594157872e-01,  9.72488199036829429e-01,
         9.75771963459980620e-01,  9.75469049389690823e-01,
         9.75520239314917037e-01,  9.75818338410657094e-01,
         9.75540705689125981e-01,  9.75380039484735983e-01,
         9.75687538068331413e-01,  9.75502488688509143e-01,
         9.75153508447147187e-01,  9.73953925150460801e-01,
         9.45150176072125158e-01,  7.92604401086527281e-01,
         6.94170882090793023e-01,  6.19762979524559579e-01,
         5.69681075293077139e-01,  5.60440241954059848e-01,
         5.59211759717773918e-01,  5.31904165569178232e-01,
         5.27607947469882064e-01,  5.48006201633870045e-01
};
constexpr std::array ILLUMINATION_D65_RED =
{
         5.14902719895936014e-02,  5.23352920647312026e-02,
         5.71791004546473335e-02,  5.29224454714988106e-02,
         4.34518591068473777e-02,  3.57749471972174836e-02,
         2.29863414173527135e-02,  3.66885690398859078e-03,
        -5.27806207140253033e-04,  9.08131578643071956e-04,
         3.51428755980356276e-04, -4.08142973294348467e-04,
        -8.80275023648407614e-05, -1.16276152202816007e-04,
        -1.36694699952666213e-04, -1.88674595293870338e-04,
        -4.69986413525161934e-04,  2.56505431063074303e-02,
         1.51214978739896488e-01,  3.30051870836711924e-01,
         5.39807606937170073e-01,  7.18947950809161164e-01,
         8.38964218713314064e-01,  9.07197401567125731e-01,
         9.30583080772871875e-01,  9.40163636924903479e-01,
         9.28001339900536282e-01,  9.36729014217554726e-01,
         9.16974491545281229e-01,  9.32982021202209862e-01,
         9.30459072905025461e-01,  9.38435782142845413e-01
};
constexpr std::array ILLUMINATION_D65_GREEN =
{
         2.36866946212582394e-02,  3.71062961832649359e-02,
         5.84060479600054537e-03,  6.69338869414430552e-03,
         2.04790039424425180e-04,  6.89582362583819424e-12,
        -2.03500895999711263e-02,  1.47476848254926589e-02,
         2.63700545388563548e-03,  3.05817663284619933e-01,
         9.56649605552102888e-01,  9.72136760797826530e-01,
         9.71394238916356120e-01,  9.74883986628842554e-01,
         9.55361970541667439e-01,  9.72946134566240276e-01,
         9.76079687544096089e-01,  9.75138996360657702e-01,
         9.62758014998426125e-01,  9.12050966608980436e-01,
        -4.87372225934556314e-03,  1.04759508293905445e-03,
         6.27502338112797558e-03,  6.96664127860691913e-04,
         2.03204453767935613e-02,  4.84508334929494671e-03,
         1.37046499193294896e-03,  1.54481685047041208e-04,
        -6.08258720022606031e-03,  9.64737423928180334e-03,
         3.98919964486784630e-02,  2.00015432298309508e-02
};
constexpr std::array ILLUMINATION_D65_BLUE =
{
         9.94819291156219435e-01,  9.91805434848301256e-01,
         9.92937362909891208e-01,  9.91046964292854682e-01,
         9.95707701382152854e-01,  9.95567369516954276e-01,
         9.96009031116701164e-01,  9.95687217401890603e-01,
         9.94009306261368384e-01,  9.94904795160633910e-01,
         9.81201574701357426e-01,  3.06837005253335481e-01,
        -1.81220258112826937e-03, -1.21962957813625175e-03,
        -1.35121209785802312e-03, -1.22005083803355244e-03,
        -1.80951591448820635e-03,  1.18781296872424438e-03,
        -1.51477018137418752e-03, -1.22628925757682661e-03,
        -1.66265462585615371e-03, -1.15996766152540917e-03,
         9.70944634437469021e-03,  2.94427547458354721e-02,
         8.35476519188164174e-02,  1.30568644915669655e-01,
         1.46204989172792364e-01,  1.40025628487259261e-01,
         1.56455649534440893e-01,  1.59969434311673239e-01,
         1.48413596878880567e-01,  1.79464696119357271e-01
};
// clang-format on

static_assert(std::ranges::is_sorted(WAVES));
static_assert(WAVES.front() == RGB_SAMPLES_MIN_WAVELENGTH);
static_assert(WAVES.back() == RGB_SAMPLES_MAX_WAVELENGTH);

template <std::size_t N>
std::vector<double> rgb_samples(const std::array<double, N>& samples, const int from, const int to, const int count)
{
        static_assert(N == WAVES.size());
        static_assert(std::is_same_v<double, decltype(WAVES)::value_type>);
        return average<double>(WAVES, samples, from, to, count);
}
}

std::vector<double> rgb_reflectance_white_samples(const int from, const int to, const int count)
{
        return rgb_samples(REFLECTANCE_WHITE, from, to, count);
}

std::vector<double> rgb_reflectance_cyan_samples(const int from, const int to, const int count)
{
        return rgb_samples(REFLECTANCE_CYAN, from, to, count);
}

std::vector<double> rgb_reflectance_magenta_samples(const int from, const int to, const int count)
{
        return rgb_samples(REFLECTANCE_MAGENTA, from, to, count);
}

std::vector<double> rgb_reflectance_yellow_samples(const int from, const int to, const int count)
{
        return rgb_samples(REFLECTANCE_YELLOW, from, to, count);
}

std::vector<double> rgb_reflectance_red_samples(const int from, const int to, const int count)
{
        return rgb_samples(REFLECTANCE_RED, from, to, count);
}

std::vector<double> rgb_reflectance_green_samples(const int from, const int to, const int count)
{
        return rgb_samples(REFLECTANCE_GREEN, from, to, count);
}

std::vector<double> rgb_reflectance_blue_samples(const int from, const int to, const int count)
{
        return rgb_samples(REFLECTANCE_BLUE, from, to, count);
}

std::vector<double> rgb_illumination_d65_white_samples(const int from, const int to, const int count)
{
        return rgb_samples(ILLUMINATION_D65_WHITE, from, to, count);
}

std::vector<double> rgb_illumination_d65_cyan_samples(const int from, const int to, const int count)
{
        return rgb_samples(ILLUMINATION_D65_CYAN, from, to, count);
}

std::vector<double> rgb_illumination_d65_magenta_samples(const int from, const int to, const int count)
{
        return rgb_samples(ILLUMINATION_D65_MAGENTA, from, to, count);
}

std::vector<double> rgb_illumination_d65_yellow_samples(const int from, const int to, const int count)
{
        return rgb_samples(ILLUMINATION_D65_YELLOW, from, to, count);
}

std::vector<double> rgb_illumination_d65_red_samples(const int from, const int to, const int count)
{
        return rgb_samples(ILLUMINATION_D65_RED, from, to, count);
}

std::vector<double> rgb_illumination_d65_green_samples(const int from, const int to, const int count)
{
        return rgb_samples(ILLUMINATION_D65_GREEN, from, to, count);
}

std::vector<double> rgb_illumination_d65_blue_samples(const int from, const int to, const int count)
{
        return rgb_samples(ILLUMINATION_D65_BLUE, from, to, count);
}
}
