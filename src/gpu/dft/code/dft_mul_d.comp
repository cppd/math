/*
Copyright (C) 2017-2021 Topological Manifold

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#version 450

// gl_GlobalInvocationID = gl_WorkGroupID * gl_WorkGroupSize + gl_LocalInvocationID

layout(local_size_x_id = 0, local_size_y_id = 1) in;
layout(constant_id = 2) const int ROWS = 1;
layout(constant_id = 3) const int COLUMNS = 1;

// Умножение на диагональ, формулы 13.20, 13.30.

layout(std430, binding = 0) restrict readonly buffer BufferDiagonal
{
        vec2 diagonal[];
};

layout(std430, binding = 1) restrict buffer BufferData
{
        vec2 data[];
};

vec2 complex_mul(vec2 a, vec2 b)
{
        return vec2(a.x * b.x - a.y * b.y, a.x * b.y + a.y * b.x);
}

void main()
{
        int i = int(gl_GlobalInvocationID.x);
        int j = int(gl_GlobalInvocationID.y);

        if (i >= COLUMNS || j >= ROWS)
        {
                return;
        }

        vec2 d = diagonal[i];
        vec2 y = data[j * COLUMNS + i];
        data[j * COLUMNS + i] = complex_mul(d, y);
}
